// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/tnwhitwell/open-api/go/models"
)

// NewCreateTeamAccountParams creates a new CreateTeamAccountParams object
// with the default values initialized.
func NewCreateTeamAccountParams() *CreateTeamAccountParams {
	var ()
	return &CreateTeamAccountParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateTeamAccountParamsWithTimeout creates a new CreateTeamAccountParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateTeamAccountParamsWithTimeout(timeout time.Duration) *CreateTeamAccountParams {
	var ()
	return &CreateTeamAccountParams{

		timeout: timeout,
	}
}

// NewCreateTeamAccountParamsWithContext creates a new CreateTeamAccountParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateTeamAccountParamsWithContext(ctx context.Context) *CreateTeamAccountParams {
	var ()
	return &CreateTeamAccountParams{

		Context: ctx,
	}
}

// NewCreateTeamAccountParamsWithHTTPClient creates a new CreateTeamAccountParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateTeamAccountParamsWithHTTPClient(client *http.Client) *CreateTeamAccountParams {
	var ()
	return &CreateTeamAccountParams{
		HTTPClient: client,
	}
}

/*CreateTeamAccountParams contains all the parameters to send to the API endpoint
for the create team account operation typically these are written to a http.Request
*/
type CreateTeamAccountParams struct {

	/*AccountSetup*/
	AccountSetup *models.AccountSetup

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create team account params
func (o *CreateTeamAccountParams) WithTimeout(timeout time.Duration) *CreateTeamAccountParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create team account params
func (o *CreateTeamAccountParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create team account params
func (o *CreateTeamAccountParams) WithContext(ctx context.Context) *CreateTeamAccountParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create team account params
func (o *CreateTeamAccountParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create team account params
func (o *CreateTeamAccountParams) WithHTTPClient(client *http.Client) *CreateTeamAccountParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create team account params
func (o *CreateTeamAccountParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountSetup adds the accountSetup to the create team account params
func (o *CreateTeamAccountParams) WithAccountSetup(accountSetup *models.AccountSetup) *CreateTeamAccountParams {
	o.SetAccountSetup(accountSetup)
	return o
}

// SetAccountSetup adds the accountSetup to the create team account params
func (o *CreateTeamAccountParams) SetAccountSetup(accountSetup *models.AccountSetup) {
	o.AccountSetup = accountSetup
}

// WriteToRequest writes these params to a swagger request
func (o *CreateTeamAccountParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AccountSetup == nil {
		o.AccountSetup = new(models.AccountSetup)
	}

	if err := r.SetBodyParam(o.AccountSetup); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
